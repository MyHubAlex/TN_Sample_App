div class="question-#{question.id}"
  h1 = question.title
  h3 = question.body
  
  div class="voting-for-question-#{question.id}"
    small class="rating-question-#{question.id}" Rating: #{question.votes_count}
    - if user_signed_in? && !current_user.author_of?(question)
      | &emsp;
      span= link_to '+', vote_up_question_path(question), method: :patch, remote: true, data: { type: :json }, class: 'vote_up_question-link'
      | &emsp;
      span= link_to '-', vote_down_question_path(question), method: :patch, remote: true, data: { type: :json }, class: 'vote_down_question-link'
      | &emsp;
      span= link_to 'Cancel', vote_cancel_question_path(question), method: :delete, remote: true, data: { type: :json }, class: "#{current_user.voted?(question) ? 'vote_cancel_question-link' : 'hidden'}", id: "cancel_vote-#{question.id}"

      
  - if signed_in? && current_user.author_of?(question)
    small= link_to 'Edit', '', class: 'edit-question-link', data: { question_id: question.id } 
    | &emsp;
    small= link_to 'Delete', question, method: :delete, data: { confirm: "Are you sure, that you want to delete this question?" }

  - if user_signed_in?
    | &emsp;
    | &emsp;
    small= link_to 'Leave comment', '', class: "comment-question-link", data: { question_id: question.id }
    br/
    

  = form_for [ question ], remote: true, html: { id: "edit-question-#{question.id}" } do |f|
    = f.label :title
    .question-errors
    p= f.text_field :title
    = f.label :body
    .question-errors
    p= f.text_area :body
    p= render 'attachments/attachment_form', f: f
    p= f.submit "Edit", class: "btn btn-sm btn-primary"
  
  br/
  .question-attachments
    - question.attachments.each do |attachment|
      div class="attachment-#{attachment.id}"
        li= link_to attachment.file.filename, attachment.file.url
        - if current_user && current_user.author_of?(question)
          = link_to "Remove file", attachment_path(attachment), method: :delete, remote: true

  
  .comments-question
    - question.comments.each do |comment|
      div class="comment-#{comment.id}"
        i= comment.body
        - if user_signed_in? && current_user.author_of?(comment)
          small
            small
              br/
              | &emsp;
              i= link_to 'Edit', '', class: 'edit-comment-link', data: { comment_id: comment.id } 
              | &emsp;
              i= link_to 'Delete', comment, method: :delete, remote: true

          = form_for comment, remote: true, html: { id: "edit-comment-#{comment.id}" } do |f|
            = f.text_area :body
            br/
            = f.submit "Edit", class: "btn btn-xs btn-primary"
            br/
    br/
    = render 'comments/new_form', commentable: question, comment: question.comments.build
  
div class="question-#{question.id}"
  h1 = question.title
  h3 = question.body

  
  div class="voting-for-question-#{question.id}"
    small class="rating-question-#{question.id}" Rating: #{question.votes_count}
    - if user_signed_in? && !current_user.author_of?(question)
      | &emsp;
      span= link_to '+', vote_up_question_path(question), method: :patch, remote: true, data: { type: :json }, class: 'vote_up_question-link'
      | &emsp;
      span= link_to '-', vote_down_question_path(question), method: :patch, remote: true, data: { type: :json }, class: 'vote_down_question-link'
      | &emsp;
      span= link_to 'Cancel', vote_cancel_question_path(question), method: :delete, remote: true, data: { type: :json }, class: "#{current_user.voted?(question) ? 'vote_cancel_question-link' : 'hidden'}", id: "cancel_vote-#{question.id}"


  .subscription
    - if user_signed_in?
      - if can?(:subscribe, question)
        small= link_to 'Subscribe', subscribe_question_path(question), method: :post, remote: true, class: "subscribe-question-link", data: { question_id: question.id }
        br/
      - if can?(:unscribe, question)
        small= link_to 'Unscribe', unscribe_question_path(question), method: :delete, remote: true, class: "unscribe-question-link", data: { question_id: question.id }
        br/

      
  - if can?(:update, question)
    small= link_to 'Edit', '', class: 'edit-question-link', data: { question_id: question.id }
    | &emsp;
  - if can?(:destroy, question)
    small= link_to 'Delete', question, method: :delete, data: { confirm: "Are you sure, that you want to delete this question?" }

  - if can?(:create, Comment)
    | &emsp;
    | &emsp;
    small= link_to 'Leave comment', '', class: "comment-question-link", data: { question_id: question.id }
    

  = form_for [ question ], remote: true, html: { id: "edit-question-#{question.id}" } do |f|
    = f.label :title
    .question-errors
    p= f.text_field :title
    = f.label :body
    .question-errors
    p= f.text_area :body
    p= render 'attachments/attachment_form', f: f
    p= f.submit "Edit", class: "btn btn-sm btn-primary"
  

  br/
  .question-attachments
    = render 'attachments/attachments', attachable: question, attachment: question.attachments

  
  br/
  div class="comments-question-#{question.id}"
    - if question.comments.any?
      small Comments:
      br/
      br/
      = render 'comments/comments', commentable: question, comment: question.comments
  br/
  = render 'comments/new_form', commentable: question, comment: question.comments.build


  